router.route('/generate').post( auth, async (req, res) => {
    const id = req.user
    const user = await userModel.find({_id: id})
    const courseName= req.body.courseName;
    const members = await userModel.find({ classes: {$elemMatch: {name: courseName, inGroup: false}}}).limit(3)
    console.log(`Original: ${members}`)
    console.log(`User: ${user}`)
    if (members.some(member => member._id === user._id)) { 
        members.push(user)
    }
    console.log(`Following request: ${members}`)
    console.log(members.length)
    if (members.length > 1) {
        
        for (let index = 0; index < members.length; index++) {
            await updateGroupStatusForMember(members[index], courseName);
        }
    
        let memberIds = []
        members.forEach(member => memberIds.push({id: member.id}))
        const newGroup = new groupsModel({
            course: courseName, 
            members: memberIds
        });
        const savedGroup = await newGroup.save();

        res.json({
            courseName,
            members
        });
    } else {
        res.json({msg: "Oops, doesn't look like you have any friends"})
    }
    

   
});